from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.utils.callback_data import CallbackData
import urllib.parse
import random
import requests
from io import BytesIO
from mtranslate import translate

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TOKEN_HERE' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = '6466934577:AAFUolEJwW9ggIuBIsicjW40BBoYxoM1KGs'
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

cb = CallbackData("image", "prompt", "seed", "style")

styles = {
    "–∞–Ω–∏–º–µ": "%20anime-style,%20high%20quality",
    "—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π": "%20realistic-style,%20high%20quality,%20ultra-realism,%204K",
    "–≥—Ä—É—Å—Ç–Ω—ã–π": "%20high%20quality,%20dark%20colors,%20rain,%20sadness"
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_styles = {}

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_styles[message.from_user.id] = "–∞–Ω–∏–º–µ"
    caption = """
üëãüèª –ü—Ä–∏–≤–µ—Ç! –¢—É—Ç –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –∞–Ω–∏–º–µ-–∞—Ä—Ç—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∞–º–æ–≥–æ –ø–µ—Ä–µ–¥–æ–≤–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ò–ò.

–•–æ—á–µ—à—å —Å—Ä–∞–∑—É –∫ –¥–µ–ª—É?
> –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –∂–µ–ª–∞–µ—à—å —É–≤–∏–¥–µ—Ç—å. –ú—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –≤—Å–µ —è–∑—ã–∫–∏ :)
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Ä—Ç—Ä–µ—Ç, –Ω–∞—á–Ω–∏ —Å –æ–ø–∏—Å–∞–Ω–∏—è –≤–Ω–µ—à–Ω–æ—Å—Ç–∏.

–ö—Å—Ç–∞—Ç–∏, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —Ç–∞–º —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞—Ä—Ç–æ–≤ –æ—Ç –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ üëá"""
    photo_path = 'photo_2024-04-11_23-23-00.jpg'
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="‚úÖ–ü–û–î–ü–ò–°–ê–¢–¨–°–Ø", url="https://t.me/kaprw")
    keyboard.add(url_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–Ω–æ–ø–∫–æ–π
    await bot.send_photo(chat_id=message.chat.id, photo=open(photo_path, 'rb'), caption=caption, reply_markup=keyboard)

@dp.message_handler()
async def handle_text(message: types.Message):
    waiting_sticker = await message.reply_sticker(sticker="CAACAgIAAxkBAAEL5bhmGCm13g7EWQzC9BPrKybr_FdSGgACcEQAAiiDwUiKG_xm3DqU2TQE")
    await bot.send_chat_action(message.chat.id, 'upload_photo')
    seed = random.randint(1, 1000)
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    user_style = user_styles.get(message.from_user.id, "–∞–Ω–∏–º–µ")
    await send_image(message, message.text, seed, user_style)
    await waiting_sticker.delete()

async def send_image(message: types.Message, prompt: str, seed: int, style_key: str):
    style = styles[style_key]
    translated_prompt = translate(prompt, 'en')
    encoded_prompt = urllib.parse.quote(translated_prompt)
    url = f"https://image.pollinations.ai/prompt/{encoded_prompt}{style}?seed={seed}&width=720&height=720&model=turbo&nologo=true"
    response = requests.get(url)
    if response.status_code == 200:
        image_bytes = BytesIO(response.content)
        image_bytes.name = 'image.jpeg'
        inline_kb = types.InlineKeyboardMarkup(row_width=2)
        inline_kb.add(types.InlineKeyboardButton("–°–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å", callback_data=cb.new(prompt=prompt, seed=seed, style='change_style')))
        caption = f"üèõ–ó–∞–ø—Ä–æ—Å: `{prompt}`"
        await bot.send_photo(message.chat.id, photo=image_bytes, caption=caption, reply_markup=inline_kb, parse_mode='Markdown')
    else:
        await bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")

@dp.callback_query_handler(cb.filter(style='change_style'))
async def change_style(callback_query: types.CallbackQuery, callback_data: dict):
    prompt = callback_data['prompt']
    seed = callback_data['seed']
    markup = types.InlineKeyboardMarkup(row_width=3)
    markup.add(types.InlineKeyboardButton("–ê–ù–ò–ú–ï", callback_data=cb.new(prompt=prompt, seed=seed, style="–∞–Ω–∏–º–µ")))
    markup.add(types.InlineKeyboardButton("–†–ï–ê–õ–ò–°–¢–ò–ß–ù–´–ô", callback_data=cb.new(prompt=prompt, seed=seed, style="—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π")))
    markup.add(types.InlineKeyboardButton("–ì–†–£–°–¢–ù–´–ô", callback_data=cb.new(prompt=prompt, seed=seed, style="–≥—Ä—É—Å—Ç–Ω—ã–π")))
    await bot.send_message(callback_query.message.chat.id, "–°–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º ‚¨áÔ∏è", reply_markup=markup)

@dp.callback_query_handler(cb.filter())
async def handle_image_style(callback_query: types.CallbackQuery, callback_data: dict):
    prompt = callback_data['prompt']
    seed = callback_data['seed']
    new_style = callback_data['style']
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    user_styles[callback_query.from_user.id] = new_style
    await bot.send_message(callback_query.message.chat.id, f"‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Ä–µ–∂–∏–º –Ω–∞: `{new_style}`", parse_mode='Markdown')

if __name__ == '__main__':
    executor.start_polling(dp)